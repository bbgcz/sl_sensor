<launch>

<arg name="open_dashboard" doc="Whether to open rqt scanning dashboard" default="true" />

<arg name="save_point_cloud" doc="Save point clouds" default="true" />
<arg name="save_images" doc="Save images" default="false" />
<arg name="save_header" doc="Header appended to start of saved files" default="log" />

<arg name="horizontal_camera_parameters_filename" doc="camera parameter xml file" default="$(find sl_sensor_calibration)/calibration_files/secondary_camera/secondary_camera.xml" />
<arg name="vertical_camera_parameters_filename" doc="camera parameter xml file" default="$(find sl_sensor_calibration)/calibration_files/primary_camera/primary_camera.xml" />
<arg name="projector_parameters_filename" doc="camera parameter xml file" default="$(find sl_sensor_calibration)/calibration_files/projector/projector.xml" />

<arg name="base_frame_id" doc="If specified, will transform point cloud to a particular frame in tf" default="world"/>
<arg name="enable_linear_motion_compensation" doc="Launch motion compensation nodelet" default="true" />
<arg name="projector_yaml_directory" doc="projector_yaml_directory" default="$(find sl_sensor_projector)/projector_yaml/lightcrafter4500.yaml" />
<arg name="frame_id" doc="frame_id used for headers in the published messages" default="sl_sensor"/>


<!-- Uncomment if using PSP with TPU Pattern-->
<arg name="horizontal_projector_pattern_name" doc="Name of pattern sequence to project" default="psp_tpu_horizontal" />
<arg name="vertical_projector_pattern_name" doc="Name of pattern sequence to project" default="psp_tpu_vertical" />
<arg name="decoder_name" doc="Name of decoder" default="phase_shift_with_tpu" />

<!-- Uncomment if using Two Plus One with TPU Pattern -->
<?ignore
<arg name="horizontal_projector_pattern_name" doc="Name of pattern sequence to project" default="two_plus_one_tpu_horizontal" />
<arg name="vertical_projector_pattern_name" doc="Name of pattern sequence to project" default="two_plus_one_tpu_vertical" />
<arg name="decoder_name" doc="Name of decoder" default="two_plus_one_with_tpu" />
?>

<!-- Initialise Reconstruction Nodelet Pipeline -->
<node pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager" output="screen">
  <param name="num_worker_threads" value="10" />
</node>

<!-- Motion Compensation if desired -->
<group if="$(arg enable_linear_motion_compensation)">
  <node pkg="nodelet" type="nodelet" name="linear_motion_compensation_horizontal" args="load sl_sensor_motion_compensation/LinearMotionCompensationNodelet standalone_nodelet" output="screen">
    <rosparam command="load" file="$(find sl_sensor_motion_compensation)/param/linear_motion_compensation_default_parameters.yaml" />
    <param name="pattern_direction" type="str" value="horizontal" />
    <param name="output_topic" type="str" value="/linear_motion_compensation/aligned_images_horizontal" />
    <param name="camera_index" type="int" value="0" />
    <param name="filter_id" type="str" value="$(arg horizontal_projector_pattern_name)" />
  </node>

  <node pkg="nodelet" type="nodelet" name="linear_motion_compensation_vertical" args="load sl_sensor_motion_compensation/LinearMotionCompensationNodelet standalone_nodelet" output="screen">
    <rosparam command="load" file="$(find sl_sensor_motion_compensation)/param/linear_motion_compensation_default_parameters.yaml" />
    <param name="pattern_direction" type="str" value="vertical" />
    <param name="output_topic" type="str" value="/linear_motion_compensation/aligned_images_vertical" />
    <param name="camera_index" type="int" value="1" />
    <param name="filter_id" type="str" value="$(arg vertical_projector_pattern_name)" />
  </node>
</group>

<!-- Decoders -->
<node pkg="nodelet" type="nodelet" name="decoder_horizontal" args="load sl_sensor_codec/DecoderNodelet standalone_nodelet" output="screen">
  <rosparam command="load" file="$(find sl_sensor_codec)/param/default_parameters.yaml" />
  <param name="codec_yaml_directory" type="str" value="$(find sl_sensor_codec)/codec_yaml/codec_config.yaml" /> 
  <param name="projector_yaml_directory" type="str" value="$(arg projector_yaml_directory)" /> 
  <param name="direction" type="str" value="horizontal" />
  <param name="decoder_name" type="str" value="$(arg decoder_name)" />
  <param name="output_topic" type="str" value="/decoder_horizontal/decoded_images" />
  <param name="filter_id" type="str" value="$(arg horizontal_projector_pattern_name)" />
</node>		  

<node pkg="nodelet" type="nodelet" name="decoder_vertical" args="load sl_sensor_codec/DecoderNodelet standalone_nodelet" output="screen">
  <rosparam command="load" file="$(find sl_sensor_codec)/param/default_parameters.yaml" />
  <param name="codec_yaml_directory" type="str" value="$(find sl_sensor_codec)/codec_yaml/codec_config.yaml" /> 
  <param name="projector_yaml_directory" type="str" value="$(arg projector_yaml_directory)" /> 
  <param name="direction" type="str" value="vertical" />
  <param name="decoder_name" type="str" value="$(arg decoder_name)" />
  <param name="output_topic" type="str" value="/decoder_vertical/decoded_images" />
  <param name="cameras_to_decode_indices" type="str" value="1" />
  <param name="filter_id" type="str" value="$(arg vertical_projector_pattern_name)" />
</node>		  

<!--If set Decoder input topic based on whether there is motion compensation -->
<group if="$(arg enable_linear_motion_compensation)">
  <param name="decoder_horizontal/input_topic" type="str" value="/linear_motion_compensation/aligned_images_horizontal" />
  <param name="decoder_vertical/input_topic" type="str" value="/linear_motion_compensation/aligned_images_vertical" />
  <!-- If there is a motion compensation nodelet, then decoder will only receive a single set of images as compared to getting images from the synchroniser where it will receive images from both cameras. Hence we set index to zero-->
  <param name="decoder_vertical/cameras_to_decode_indices" type="str" value="0" />
</group>

<!-- Triangulator -->
<node pkg="nodelet" type="nodelet" name="triangulator_horizontal" args="load sl_sensor_reconstruction/TriangulatorNodelet standalone_nodelet" output="screen">
  <rosparam command="load" file="$(find sl_sensor_reconstruction)/param/default_parameters.yaml" />
  <param name="input_topic" type="str" value="/decoder_horizontal/decoded_images" />
  <param name="triangulation_camera_parameters_filename" type="str" value="$(arg horizontal_camera_parameters_filename)" />
  <param name="projector_parameters_filename" type="str" value="$(arg projector_parameters_filename)" />
  <param name="frame_camera_parameters_filename" type="str" value="$(arg vertical_camera_parameters_filename)" /> <!-- Translate to frame of vertical pattern camera (top camera)-->
  <param name="apply_scaling" type="bool" value="true" />
  <param name="scaling_factor" type="double" value="0.001" />
  <param name="apply_transform_using_tf" type="bool" value="true" />
  <param name="base_frame_id" type="str" value="world" />
</node>		  

<node pkg="nodelet" type="nodelet" name="triangulator_vertical" args="load sl_sensor_reconstruction/TriangulatorNodelet standalone_nodelet" output="screen">
  <rosparam command="load" file="$(find sl_sensor_reconstruction)/param/default_parameters.yaml" />
  <param name="input_topic" type="str" value="/decoder_vertical/decoded_images" />
  <param name="triangulation_camera_parameters_filename" type="str" value="$(arg vertical_camera_parameters_filename)" />
  <param name="projector_parameters_filename" type="str" value="$(arg projector_parameters_filename)" />
  <param name="apply_scaling" type="bool" value="true" />
  <param name="scaling_factor" type="double" value="0.001" />
  <param name="apply_transform_using_tf" type="bool" value="true" />
  <param name="base_frame_id" type="str" value="world" />
</node>		  

<!-- Loggers -->
<include file="$(find sl_sensor_logger)/launch/launch_loggers.launch" pass_all_args="true">
  <arg name="point_cloud_include_timestamp" value = "false" />
</include>

<node pkg="rviz" type="rviz" name="rviz_sl_sensor" args="-d $(find sl_sensor)/rviz/rosbag_processing.rviz" />	  

</launch>